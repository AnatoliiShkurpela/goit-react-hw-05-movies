{"version":3,"file":"static/js/257.6203d543.chunk.js","mappings":"sIACO,SAASA,EAAYC,GAU1B,OAAOC,MAAMD,EATG,CACdE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIqBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACpC,C,qKCTYC,EAAmBC,EAAAA,GAAAA,IAAH,0JAQhBC,EAAkBD,EAAAA,GAAAA,IAAH,2HAOfE,EAAqBF,EAAAA,GAAAA,IAAH,uDAKlBG,GAAmBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,gJAWhBK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,yP,kBCkCvB,MAzDA,WAAyB,IAAD,IACdO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMrB,EAAG,6CAAyCiB,EAAzC,oBAETK,EAAAA,EAAAA,YAAU,YACRvB,EAAAA,EAAAA,GAAYC,GACTM,MAAK,SAAAiB,GACJF,EAASE,EACV,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAA7B,GACb,GAAE,CAACzB,IAEJ,IAAM4B,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAIF,EAASG,aAAb,aAAI,EAAgBC,YAApB,QAA4B,UAE9C,OACEZ,IACE,UAACX,EAAD,YACE,SAACM,EAAD,CAAYkB,GAAIH,EAAhB,SAA8B,oBAC9B,UAACnB,EAAD,YACE,gBACEuB,MAAM,QACNC,OAAO,QACPC,IAAG,8CAAyChB,EAAMiB,aAClDC,IAAKlB,EAAMmB,SAEb,4BACE,wBAAKnB,EAAMmB,SACX,yBAAG,gBAAcC,KAAKC,MAA2B,GAArBrB,EAAMsB,cAAmB,QACrD,wBAAI,cACJ,uBAAItB,EAAMuB,YACV,wBAAI,YACJ,SAAC/B,EAAD,UACGQ,EAAMwB,OAAOC,KAAI,SAAAC,GAChB,OAAO,uBAAkBA,EAAKC,MAAfD,EAAKE,GACrB,aAIP,wBAAI,4BACJ,2BACE,yBACE,SAACnC,EAAD,CAAkBoB,GAAG,OAAOF,MAAOH,EAASG,MAA5C,SAAmD,YAErD,yBACE,SAAClB,EAAD,CAAkBoB,GAAG,UAAUF,MAAOH,EAASG,MAA/C,SAAsD,kBAG1D,SAAC,EAAAkB,SAAD,CAAUC,UAAU,yBAAK,oBAAzB,UACE,SAAC,KAAD,QAKT,C","sources":["Api/fetchMovies.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["\nexport function fetchMovies(url) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDhlY2Y3NDVmNWJiZTUwZmM2NDhjMDg1OWZhMTcwMSIsInN1YiI6IjY0ODhjMTU2ZDJiMjA5MDBjYTIxNzA5NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4vxGV4kBszJbv90PYcnQ1DUyBmnKxmAR_P1khjcXgUk',\n    },\n  };\n\n  return fetch(url, options).then(res => res.json());\n}\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const MovieDetailsPage = styled.div`\n  color: #e6e6e6;\n  padding: 20px;\n  padding-bottom: 100px;\n  background-color: #0a0909;\n  border-bottom: 1px solid #ffffff;\n`;\n\nexport const MovieDetailsDiv = styled.div`\n  display: flex;\n  gap: 40px;\n  background-color: #0a0909;\n  border-bottom: 1px solid #ffffff;\n`;\n\nexport const MovieDetailsGenres = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const MovieDetailsLink = styled(NavLink)`\n  color: #e6e6e6;\n  margin: 0;\n  text-decoration: none;\n  font-size: 14px;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const GoBackLink = styled(Link)`\n  display: inline-block;\n  color: #e6e6e6;\n  font-size: 12px;\n  text-decoration: none;\n  background-color: transparent;\n  border: 0.5px solid #e6e6e6;\n  border-radius: 9px;\n  padding: 2px 4px;\n  margin-bottom: 20px;\n`;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  MovieDetailsPage,\n  MovieDetailsDiv,\n  MovieDetailsGenres,\n  MovieDetailsLink,\n  GoBackLink,\n} from './MovieDetails.styled';\nimport { fetchMovies } from '../../Api/fetchMovies';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n\n  useEffect(() => {\n    fetchMovies(url)\n      .then(results => {\n        setMovie(results);\n      })\n      .catch(err => console.error('error:' + err));\n  }, [url]);\n\n  const location = useLocation();\n  const backLinkHref =  location.state?.from ?? '/movies';\n\n  return (\n    movie && (\n      <MovieDetailsPage>\n        <GoBackLink to={backLinkHref}>&larr; Go back</GoBackLink>\n        <MovieDetailsDiv>\n          <img\n            width=\"200px\"\n            height=\"300px\"\n            src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <div>\n            <h2>{movie.title}</h2>\n            <p>User Scrore: {Math.round(movie.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <MovieDetailsGenres>\n              {movie.genres.map(genr => {\n                return <p key={genr.id}>{genr.name}</p>;\n              })}\n            </MovieDetailsGenres>\n          </div>\n        </MovieDetailsDiv>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <MovieDetailsLink to=\"cast\" state={location.state}>Cast</MovieDetailsLink>\n          </li>\n          <li>\n            <MovieDetailsLink to=\"reviews\" state={location.state}>Reviews</MovieDetailsLink>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </MovieDetailsPage>\n    )\n  );\n}\n\nexport default MovieDetails;\n"],"names":["fetchMovies","url","fetch","method","headers","accept","Authorization","then","res","json","MovieDetailsPage","styled","MovieDetailsDiv","MovieDetailsGenres","MovieDetailsLink","NavLink","GoBackLink","Link","movieId","useParams","useState","movie","setMovie","useEffect","results","catch","err","console","error","location","useLocation","backLinkHref","state","from","to","width","height","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genr","name","id","Suspense","fallback"],"sourceRoot":""}